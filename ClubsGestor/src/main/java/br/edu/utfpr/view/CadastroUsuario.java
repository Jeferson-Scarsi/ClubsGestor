/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.edu.utfpr.view;

import br.edu.utfpr.main.Main;
import br.edu.utfpr.model.Usuario;
import java.util.List;
import javax.persistence.TypedQuery;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author jeferson.scarsi
 */
public class CadastroUsuario extends javax.swing.JInternalFrame {
    private DefaultTableModel modeloTabela = new DefaultTableModel();
    private Usuario usuarioSelecionado;
    /**
     * Creates new form cadastroUsuario
     */
    public CadastroUsuario() {
        initComponents();
        
        modeloTabela = (DefaultTableModel) tblUsuarios.getModel();        
        carregarListaUsuarios();
        
    }
    
    private void carregarListaUsuarios(){
        //Remover linhas existentes
        while(tblUsuarios.getRowCount() > 0){
            modeloTabela.removeRow(0);
        }
        
        String jpql = "select u from Usuario u where u.nome <> 'Administrador do Sistema'";
        TypedQuery query = Main.em.createQuery(jpql, Usuario.class);
        
        List<Usuario> lista = query.getResultList();
        for (Usuario u : lista){
            Object row[] = {
                u.getIdusuario(),
                u.getNome(),
                u.getLogin(),
                u.getPassword(),
                u.isFlagadm(),
                u.isFlagativo()
            };
            
            modeloTabela.addRow(row);
        }
        
    }
    
    private void novoUsuario(){
        txtCodUsuario.setText("");
        txtNomeUsuario.setText("");
        txtLogin.setText("");
        txtSenha.setText("");        
                
        tblUsuarios.clearSelection();
        usuarioSelecionado = null;        
    } 
    
    private boolean validarCampos(){
        if (txtNomeUsuario.getText().trim().length() == 0){
            JOptionPane.showMessageDialog(this, "Erro: Campo Nome Usuário é obrigatório.");
            return false;
        }
        
        if (txtLogin.getText().trim().length() == 0){
            JOptionPane.showMessageDialog(this, "Erro: Campo Login é obrigatório.");
            return false;
        }
        
        if (txtSenha.getText().trim().length() == 0){
            JOptionPane.showMessageDialog(this, "Erro: Campo Login é obrigatório.");
            return false;
        }   
                
        return true;
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jToolBar1 = new javax.swing.JToolBar();
        btnAdicionar = new javax.swing.JButton();
        btnSalvar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblUsuarios = new javax.swing.JTable();
        lblCodUsuario = new javax.swing.JLabel();
        txtCodUsuario = new javax.swing.JTextField();
        lblNomeUsuario = new javax.swing.JLabel();
        txtNomeUsuario = new javax.swing.JTextField();
        lblLogin = new javax.swing.JLabel();
        txtLogin = new javax.swing.JTextField();
        lblSenha = new javax.swing.JLabel();
        txtSenha = new javax.swing.JTextField();
        chkAdmin = new javax.swing.JCheckBox();
        chkAtivo = new javax.swing.JCheckBox();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("Cadastro de Usuários");

        jToolBar1.setRollover(true);

        btnAdicionar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens-24px/botao-adicionar.png"))); // NOI18N
        btnAdicionar.setFocusable(false);
        btnAdicionar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAdicionar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarActionPerformed(evt);
            }
        });
        jToolBar1.add(btnAdicionar);

        btnSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens-24px/disquete.png"))); // NOI18N
        btnSalvar.setFocusable(false);
        btnSalvar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSalvar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });
        jToolBar1.add(btnSalvar);

        btnEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens-24px/lapis.png"))); // NOI18N
        btnEditar.setFocusable(false);
        btnEditar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnEditar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });
        jToolBar1.add(btnEditar);

        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens-24px/excluir.png"))); // NOI18N
        btnEliminar.setFocusable(false);
        btnEliminar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnEliminar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        jToolBar1.add(btnEliminar);

        tblUsuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cód. Usuário", "Nome", "Login", "Senha", "Flag Admin.", "Flag Ativo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Boolean.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblUsuarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblUsuariosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblUsuarios);
        if (tblUsuarios.getColumnModel().getColumnCount() > 0) {
            tblUsuarios.getColumnModel().getColumn(0).setMaxWidth(100);
            tblUsuarios.getColumnModel().getColumn(1).setMaxWidth(700);
            tblUsuarios.getColumnModel().getColumn(2).setMaxWidth(350);
            tblUsuarios.getColumnModel().getColumn(3).setMaxWidth(350);
            tblUsuarios.getColumnModel().getColumn(4).setMaxWidth(100);
            tblUsuarios.getColumnModel().getColumn(5).setMaxWidth(100);
        }

        lblCodUsuario.setText("Cód. Usuário:");

        txtCodUsuario.setEditable(false);

        lblNomeUsuario.setText("Nome:");

        txtNomeUsuario.setEditable(false);

        lblLogin.setText("Login:");

        txtLogin.setEditable(false);

        lblSenha.setText("Senha:");

        txtSenha.setEditable(false);

        chkAdmin.setText("Administrador");

        chkAtivo.setText("Ativo");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 750, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jScrollPane1)
                .addGap(9, 9, 9))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtCodUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCodUsuario))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtNomeUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNomeUsuario))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblLogin))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtSenha, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(chkAdmin)
                        .addGap(18, 18, 18)
                        .addComponent(chkAtivo))
                    .addComponent(lblSenha)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblNomeUsuario)
                        .addComponent(lblCodUsuario))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblSenha)
                        .addComponent(lblLogin)))
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtNomeUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtCodUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtSenha, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(chkAtivo)
                        .addComponent(chkAdmin)))
                .addGap(17, 17, 17)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarActionPerformed
        novoUsuario();
        txtNomeUsuario.setEditable(true);
        txtLogin.setEditable(true);
        txtSenha.setEditable(true);
        chkAdmin.setSelected(false);
        chkAtivo.setSelected(true);
    }//GEN-LAST:event_btnAdicionarActionPerformed

    private void tblUsuariosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblUsuariosMouseClicked
        if (tblUsuarios.getSelectedRow() != -1){
            Long id = (Long) modeloTabela.getValueAt(tblUsuarios.getSelectedRow(), 0);
            
            Usuario userSelected = Main.em.find(Usuario.class, id);
            
        }
    }//GEN-LAST:event_tblUsuariosMouseClicked

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        boolean novo = false;
        
        if (validarCampos() == false){
            return;
        }
        
        if (usuarioSelecionado == null){
            novo = true;
            usuarioSelecionado = new Usuario();
        }
        
        usuarioSelecionado.setNome(txtNomeUsuario.getText());
        usuarioSelecionado.setLogin(txtLogin.getText());
        usuarioSelecionado.setPassword(txtSenha.getText());
        usuarioSelecionado.setFlagadm(chkAdmin.isSelected());
        usuarioSelecionado.setFlagativo(chkAtivo.isSelected());
        
        Main.em.getTransaction().begin();
        if (novo) {
            Main.em.persist(usuarioSelecionado);
        } else {
            Main.em.merge(usuarioSelecionado);
        }
        Main.em.getTransaction().commit();
        
        novoUsuario();
        
        carregarListaUsuarios();
        
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        if (tblUsuarios.getSelectedRow() != -1){
            Long id = (Long) modeloTabela.getValueAt(tblUsuarios.getSelectedRow(), 0);
            
            usuarioSelecionado = Main.em.find(Usuario.class, id);
            txtCodUsuario.setText(usuarioSelecionado.getIdusuario().toString());
            txtNomeUsuario.setText(usuarioSelecionado.getNome());
            txtNomeUsuario.setEditable(true);
            txtLogin.setText(usuarioSelecionado.getLogin());
            txtLogin.setEditable(true);
            txtSenha.setText(usuarioSelecionado.getPassword());
            txtSenha.setEditable(true);
            chkAdmin.setSelected(usuarioSelecionado.isFlagadm());
            chkAtivo.setSelected(usuarioSelecionado.isFlagativo());
        }
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        if (tblUsuarios.getSelectedRow() != -1){
            Long id = (Long) modeloTabela.getValueAt(tblUsuarios.getSelectedRow(), 0);
            usuarioSelecionado = Main.em.find(Usuario.class, id);
            
            int result = JOptionPane.showConfirmDialog(this, "Deseja remover o usuário " + usuarioSelecionado.getNome()+ "?", "Remoção", JOptionPane.YES_NO_OPTION);
            
            if (result == JOptionPane.YES_OPTION){
                Main.em.getTransaction().begin();
                Main.em.remove(usuarioSelecionado);
                Main.em.getTransaction().commit();

                carregarListaUsuarios();
                novoUsuario();
            }            
        }else{
            JOptionPane.showMessageDialog(this, "Selecione um registro para remover.");
        }
    }//GEN-LAST:event_btnEliminarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdicionar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JCheckBox chkAdmin;
    private javax.swing.JCheckBox chkAtivo;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JLabel lblCodUsuario;
    private javax.swing.JLabel lblLogin;
    private javax.swing.JLabel lblNomeUsuario;
    private javax.swing.JLabel lblSenha;
    private javax.swing.JTable tblUsuarios;
    private javax.swing.JTextField txtCodUsuario;
    private javax.swing.JTextField txtLogin;
    private javax.swing.JTextField txtNomeUsuario;
    private javax.swing.JTextField txtSenha;
    // End of variables declaration//GEN-END:variables
}
