/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.edu.utfpr.view;

import br.edu.utfpr.main.Main;
import br.edu.utfpr.model.Categorias_Socios;
import br.edu.utfpr.model.Empresa;
import br.edu.utfpr.model.FormaPagRec;
import java.util.List;
import javax.persistence.TypedQuery;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author jeferson.scarsi
 */
public class ConfiguracoesGerais extends javax.swing.JInternalFrame {
    private DefaultTableModel modeloTabelaCategoria = new DefaultTableModel();
    private DefaultTableModel modeloTabelaForma = new DefaultTableModel();
    private Categorias_Socios categoriaSelecionada;
    private FormaPagRec formaSelecionada;
    private Object getId;

    /**
     * Creates new form cadastroUsuario
     */
    public ConfiguracoesGerais() {
        initComponents();
        
        modeloTabelaCategoria = (DefaultTableModel) tblCategoria.getModel();
        modeloTabelaForma = (DefaultTableModel) tblFormaPR.getModel();
        carregarListaCategorias();  
        carregarListaFormaPR();
        
        txtDescricao.setEditable(false);
        ftxValor.setEditable(false);
        
    }
    
    private void carregarListaCategorias(){
        //Remover linhas existentes
        while(tblCategoria.getRowCount() > 0){
            modeloTabelaCategoria.removeRow(0);
        }
        
        String jpql = "select cs from Categorias_Socios cs";
        TypedQuery query = Main.em.createQuery(jpql, Categorias_Socios.class);
        
        List<Categorias_Socios> lista = query.getResultList();
        for (Categorias_Socios cs : lista){
            Object row[] = {
                cs.getIdcategoria(),
                cs.getDescrcategoria(),
                cs.getValor(),
                cs.isFlagativo()
            };
            
            modeloTabelaCategoria.addRow(row);
        }
        
    }
    
    private void carregarListaFormaPR(){
        //Remover linhas existentes
        while(tblFormaPR.getRowCount() > 0){
            modeloTabelaForma.removeRow(0);
        }
        
        String jpql = "select fpr from FormaPagRec fpr";
        TypedQuery query = Main.em.createQuery(jpql, FormaPagRec.class);
        
        List<FormaPagRec> lista = query.getResultList();
        for (FormaPagRec fpr : lista){
            Object row[] = {
                fpr.getIdformapagrec(),
                fpr.getDescrforma(),
                fpr.isFlagativo()
            };
            
            modeloTabelaForma.addRow(row);
        }
        
    }
    
    private void novaCategoria(){
        txtCodCategoria.setText("");
        txtDescricao.setText("");
        txtDescricao.setEditable(true);
        ftxValor.setValue(0);
        ftxValor.setEditable(true);
        chkFlagAtivo.setSelected(true);
        chkFlagAtivo.setEnabled(true);
        
        tblCategoria.clearSelection();
        categoriaSelecionada = null;        
    }
    
    private void novaFormPR(){
        txtCodFormaPR.setText("");
        txtDescricaoFormaPR.setText("");
        txtDescricaoFormaPR.setEditable(true);
        chkFlagAtivoFormaPR.setSelected(true);
        chkFlagAtivoFormaPR.setEnabled(true);
        
        tblFormaPR.clearSelection();
        formaSelecionada = null;        
    }
    
    private boolean validarCampos(){
        
        if (txtDescricao.getText().trim().length() == 0 ){
            JOptionPane.showMessageDialog(this, "Campo Descrição é obrigatório");
            return false;
        }
        
        if (ftxValor.getText().trim().length() == 0 ){
            JOptionPane.showMessageDialog(this, "Campo valor é obrigatório.");
        }
        
        return true;
    }
    
    private boolean validarFormaPR(){
        
        if (txtDescricaoFormaPR.getText().trim().length() == 0 ){
            JOptionPane.showMessageDialog(this, "Campo Descrição é obrigatório");
            return false;
        }
               
        return true;
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        lblCodFormaPR = new javax.swing.JLabel();
        txtCodFormaPR = new javax.swing.JTextField();
        lblDescricaoFormaPR = new javax.swing.JLabel();
        txtDescricaoFormaPR = new javax.swing.JTextField();
        chkFlagAtivoFormaPR = new javax.swing.JCheckBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblFormaPR = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        lblCodCategoria = new javax.swing.JLabel();
        txtCodCategoria = new javax.swing.JTextField();
        lblDescricao = new javax.swing.JLabel();
        txtDescricao = new javax.swing.JTextField();
        chkFlagAtivo = new javax.swing.JCheckBox();
        lblDescricao1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCategoria = new javax.swing.JTable();
        ftxValor = new javax.swing.JFormattedTextField();
        jToolBar2 = new javax.swing.JToolBar();
        tbnNovoFormaPR = new javax.swing.JButton();
        btnSalvarFormaPR = new javax.swing.JButton();
        btnEditarFormaPR = new javax.swing.JButton();
        btnRemoverFormaPR = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("Cadastros Gerais");

        lblCodFormaPR.setText("Codigo:");

        txtCodFormaPR.setEditable(false);

        lblDescricaoFormaPR.setText("Descrição:");

        txtDescricaoFormaPR.setEditable(false);

        chkFlagAtivoFormaPR.setText("Ativo");
        chkFlagAtivoFormaPR.setEnabled(false);
        chkFlagAtivoFormaPR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkFlagAtivoFormaPRActionPerformed(evt);
            }
        });

        tblFormaPR.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Cod.", "Descrição", "Flag Ativo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Long.class, java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblFormaPR);
        if (tblFormaPR.getColumnModel().getColumnCount() > 0) {
            tblFormaPR.getColumnModel().getColumn(0).setMaxWidth(50);
            tblFormaPR.getColumnModel().getColumn(1).setMaxWidth(350);
            tblFormaPR.getColumnModel().getColumn(2).setMaxWidth(75);
        }

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 447, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCodFormaPR, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblDescricaoFormaPR)
                            .addComponent(lblCodFormaPR)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(txtDescricaoFormaPR, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(chkFlagAtivoFormaPR)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblCodFormaPR)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtCodFormaPR, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblDescricaoFormaPR)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDescricaoFormaPR, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkFlagAtivoFormaPR))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Formas de Pagamento", jPanel2);

        lblCodCategoria.setText("Cod. Categoria:");

        txtCodCategoria.setEditable(false);

        lblDescricao.setText("Descrição:");

        txtDescricao.setEditable(false);

        chkFlagAtivo.setText("Ativo");
        chkFlagAtivo.setEnabled(false);
        chkFlagAtivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkFlagAtivoActionPerformed(evt);
            }
        });

        lblDescricao1.setText("Valor:");

        tblCategoria.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Cod.", "Descrição", "Valor", "Flag Ativo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Long.class, java.lang.String.class, java.lang.Float.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblCategoria);
        if (tblCategoria.getColumnModel().getColumnCount() > 0) {
            tblCategoria.getColumnModel().getColumn(0).setMaxWidth(50);
            tblCategoria.getColumnModel().getColumn(1).setMaxWidth(350);
            tblCategoria.getColumnModel().getColumn(2).setMaxWidth(100);
            tblCategoria.getColumnModel().getColumn(2).setHeaderValue("Valor");
            tblCategoria.getColumnModel().getColumn(3).setMaxWidth(75);
        }

        ftxValor.setEditable(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 447, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblDescricao)
                            .addComponent(txtCodCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCodCategoria))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ftxValor)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(chkFlagAtivo)
                                    .addComponent(lblDescricao1))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblCodCategoria)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCodCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkFlagAtivo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblDescricao1)
                    .addComponent(lblDescricao))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ftxValor, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Categorias Sócios", jPanel1);

        getContentPane().add(jTabbedPane1, java.awt.BorderLayout.CENTER);

        jToolBar2.setRollover(true);

        tbnNovoFormaPR.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens-24px/botao-adicionar.png"))); // NOI18N
        tbnNovoFormaPR.setFocusable(false);
        tbnNovoFormaPR.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        tbnNovoFormaPR.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        tbnNovoFormaPR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbnNovoFormaPRActionPerformed(evt);
            }
        });
        jToolBar2.add(tbnNovoFormaPR);

        btnSalvarFormaPR.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens-24px/disquete.png"))); // NOI18N
        btnSalvarFormaPR.setFocusable(false);
        btnSalvarFormaPR.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSalvarFormaPR.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnSalvarFormaPR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarFormaPRActionPerformed(evt);
            }
        });
        jToolBar2.add(btnSalvarFormaPR);

        btnEditarFormaPR.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens-24px/lapis.png"))); // NOI18N
        btnEditarFormaPR.setFocusable(false);
        btnEditarFormaPR.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnEditarFormaPR.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnEditarFormaPR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarFormaPRActionPerformed(evt);
            }
        });
        jToolBar2.add(btnEditarFormaPR);

        btnRemoverFormaPR.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens-24px/excluir.png"))); // NOI18N
        btnRemoverFormaPR.setFocusable(false);
        btnRemoverFormaPR.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnRemoverFormaPR.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnRemoverFormaPR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverFormaPRActionPerformed(evt);
            }
        });
        jToolBar2.add(btnRemoverFormaPR);

        getContentPane().add(jToolBar2, java.awt.BorderLayout.PAGE_START);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void chkFlagAtivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkFlagAtivoActionPerformed
        
    }//GEN-LAST:event_chkFlagAtivoActionPerformed

    private void tbnNovoFormaPRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbnNovoFormaPRActionPerformed
        if (jTabbedPane1.getSelectedIndex() == 0){
            novaFormPR();
        } else if (jTabbedPane1.getSelectedIndex() == 1){
            novaCategoria();
        }                
    }//GEN-LAST:event_tbnNovoFormaPRActionPerformed

    private void btnSalvarFormaPRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarFormaPRActionPerformed
        if (jTabbedPane1.getSelectedIndex() == 0){
            boolean novo = false;

            if (validarFormaPR() == false){
                return;
            }

            if (formaSelecionada == null){
                novo = true;
                formaSelecionada = new FormaPagRec();
            }

            formaSelecionada.setDescrforma(txtDescricaoFormaPR.getText());
            formaSelecionada.setFlagativo(chkFlagAtivoFormaPR.isSelected());

            Main.em.getTransaction().begin();
            if (novo){
                Main.em.persist(formaSelecionada);
            }else {
                Main.em.persist(formaSelecionada);
            }
            Main.em.getTransaction().commit();

            novaFormPR();
            txtDescricaoFormaPR.setEditable(false);
            chkFlagAtivoFormaPR.setSelected(false);
            chkFlagAtivoFormaPR.setEnabled(false);

            carregarListaFormaPR();
            
        } else if (jTabbedPane1.getSelectedIndex() == 1){
            boolean novo = false;

            if (validarCampos() == false){
                return;
            }

            if (categoriaSelecionada == null){
                novo = true;
                categoriaSelecionada = new Categorias_Socios();
            }

            categoriaSelecionada.setDescrcategoria(txtDescricao.getText());

            String valorString = String.valueOf(ftxValor.getText());
            categoriaSelecionada.setValor(Double.parseDouble(valorString));
            categoriaSelecionada.setFlagativo(chkFlagAtivo.isSelected());

            Main.em.getTransaction().begin();
            if (novo){
                Main.em.persist(categoriaSelecionada);
            }else {
                Main.em.persist(categoriaSelecionada);
            }
            Main.em.getTransaction().commit();

            novaCategoria();
            txtDescricao.setEditable(false);
            ftxValor.setEditable(false);
            chkFlagAtivo.setSelected(false);

            carregarListaCategorias();
        }
    }//GEN-LAST:event_btnSalvarFormaPRActionPerformed

    private void btnEditarFormaPRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarFormaPRActionPerformed
        if (jTabbedPane1.getSelectedIndex() == 0){
            if (tblFormaPR.getSelectedRow() != -1){
                Long id = (Long) modeloTabelaForma.getValueAt(tblFormaPR.getSelectedRow(), 0);

                formaSelecionada = Main.em.find(FormaPagRec.class, id);
                txtDescricaoFormaPR.setText(formaSelecionada.getDescrforma());
                this.chkFlagAtivoFormaPR.setSelected(formaSelecionada.isFlagativo());

                txtDescricao.setEditable(true);
                chkFlagAtivoFormaPR.setEnabled(true);
            }
        } else if (jTabbedPane1.getSelectedIndex() == 1){
            if (tblCategoria.getSelectedRow() != -1){
                Long id = (Long) modeloTabelaCategoria.getValueAt(tblCategoria.getSelectedRow(), 0);

                categoriaSelecionada = Main.em.find(Categorias_Socios.class, id);
                txtCodCategoria.setText(categoriaSelecionada.getIdcategoria().toString());
                txtDescricao.setText(categoriaSelecionada.getDescrcategoria());
                this.ftxValor.setText(String.valueOf(categoriaSelecionada.getValor()));
                this.chkFlagAtivo.setSelected(categoriaSelecionada.isFlagativo());

                txtDescricao.setEditable(true);
                ftxValor.setEditable(true);
                chkFlagAtivo.setEnabled(true);
            }
        }
    }//GEN-LAST:event_btnEditarFormaPRActionPerformed

    private void btnRemoverFormaPRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverFormaPRActionPerformed
        if (jTabbedPane1.getSelectedIndex() == 0){
            if (tblFormaPR.getSelectedRow() != -1){
                Long id = (Long) modeloTabelaForma.getValueAt(tblFormaPR.getSelectedRow(), 0);
                formaSelecionada = Main.em.find(FormaPagRec.class, id);

                int result = JOptionPane.showConfirmDialog(this, "Deseja remover a forma de pagamento " + formaSelecionada.getDescrforma()+ "?", "Remoção", JOptionPane.YES_NO_OPTION);

                if (result == JOptionPane.YES_OPTION){
                    Main.em.getTransaction().begin();
                    Main.em.remove(formaSelecionada);
                    Main.em.getTransaction().commit();

                    carregarListaFormaPR();
                    novaFormPR();

                    txtDescricaoFormaPR.setEditable(false);
                    chkFlagAtivoFormaPR.setSelected(false);
                }
            }else{
                JOptionPane.showMessageDialog(this, "Selecione um registro para remover.");
            }
        } else if (jTabbedPane1.getSelectedIndex() == 1){
            if (tblCategoria.getSelectedRow() != -1){
                Long id = (Long) modeloTabelaCategoria.getValueAt(tblCategoria.getSelectedRow(), 0);
                categoriaSelecionada = Main.em.find(Categorias_Socios.class, id);

                int result = JOptionPane.showConfirmDialog(this, "Deseja remover a categoria " + categoriaSelecionada.getDescrcategoria()+ "?", "Remoção", JOptionPane.YES_NO_OPTION);

                if (result == JOptionPane.YES_OPTION){
                    Main.em.getTransaction().begin();
                    Main.em.remove(categoriaSelecionada);
                    Main.em.getTransaction().commit();

                    carregarListaCategorias();
                    novaCategoria();

                    txtDescricao.setEditable(false);
                    ftxValor.setEditable(false);
                    chkFlagAtivo.setSelected(false);
                }
            }else{
                JOptionPane.showMessageDialog(this, "Selecione um registro para remover.");
            }
        }
    }//GEN-LAST:event_btnRemoverFormaPRActionPerformed

    private void chkFlagAtivoFormaPRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkFlagAtivoFormaPRActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkFlagAtivoFormaPRActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEditarFormaPR;
    private javax.swing.JButton btnRemoverFormaPR;
    private javax.swing.JButton btnSalvarFormaPR;
    private javax.swing.JCheckBox chkFlagAtivo;
    private javax.swing.JCheckBox chkFlagAtivoFormaPR;
    private javax.swing.JFormattedTextField ftxValor;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JToolBar jToolBar2;
    private javax.swing.JLabel lblCodCategoria;
    private javax.swing.JLabel lblCodFormaPR;
    private javax.swing.JLabel lblDescricao;
    private javax.swing.JLabel lblDescricao1;
    private javax.swing.JLabel lblDescricaoFormaPR;
    private javax.swing.JTable tblCategoria;
    private javax.swing.JTable tblFormaPR;
    private javax.swing.JButton tbnNovoFormaPR;
    private javax.swing.JTextField txtCodCategoria;
    private javax.swing.JTextField txtCodFormaPR;
    private javax.swing.JTextField txtDescricao;
    private javax.swing.JTextField txtDescricaoFormaPR;
    // End of variables declaration//GEN-END:variables
}
